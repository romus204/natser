# Запускать в качестве менее привилегированного пользователя по соображениям безопасности..
user nginx;

# Значение auto устанавливает число максимально доступных ядер CPU,
# чтобы обеспечить лучшую производительность.
worker_processes    auto;

events { worker_connections 1024; }

http {
    # Подключаем стандартные MIME-типы
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }

    server {
        listen 80;

        # Обслуживание статических файлов
        location / {
            root /usr/share/nginx/html;
            index send_msg.html;
        }

         # Поддержка WebSocket
        location /ws/ {
            proxy_pass http://127.0.0.1:3000;  # Проксируем WebSocket на Go API
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;  # WebSocket может висеть долго, поэтому увеличиваем таймаут
        }

        # Прокси запросы к Go API
        location /v1/ {
            proxy_pass http://127.0.0.1:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Обслуживание JavaScript файлов с правильным MIME-типом
        location ~ \.js$ {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
        }

        # Обслуживание CSS файлов с правильным MIME-типом
        location ~ \.css$ {
            root /usr/share/nginx/html;
            add_header Content-Type text/css;
        }
    }

}